ARM GAS  /tmp/cc7XxYnW.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_conf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_PCD_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_PCD_MspInit:
  24              	.LFB37:
  25              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /**
   2:Src/usbd_conf.c ****   ******************************************************************************
   3:Src/usbd_conf.c ****   * @file    USB_Device/CDC_Standalone/Src/usbd_conf.c
   4:Src/usbd_conf.c ****   * @author  MCD Application Team
   5:Src/usbd_conf.c ****   * @brief   This file implements the USB Device library callbacks and MSP
   6:Src/usbd_conf.c ****   ******************************************************************************
   7:Src/usbd_conf.c ****   * @attention
   8:Src/usbd_conf.c ****   *
   9:Src/usbd_conf.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics International N.V. 
  10:Src/usbd_conf.c ****   * All rights reserved.</center></h2>
  11:Src/usbd_conf.c ****   *
  12:Src/usbd_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  13:Src/usbd_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  14:Src/usbd_conf.c ****   *
  15:Src/usbd_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  16:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer.
  17:Src/usbd_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  18:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  19:Src/usbd_conf.c ****   *    and/or other materials provided with the distribution.
  20:Src/usbd_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  21:Src/usbd_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  22:Src/usbd_conf.c ****   *    derived from this software without specific written permission.
  23:Src/usbd_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  24:Src/usbd_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  25:Src/usbd_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  26:Src/usbd_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  27:Src/usbd_conf.c ****   *    this license is void and will automatically terminate your rights under 
  28:Src/usbd_conf.c ****   *    this license. 
  29:Src/usbd_conf.c ****   *
  30:Src/usbd_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  31:Src/usbd_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  32:Src/usbd_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  33:Src/usbd_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
ARM GAS  /tmp/cc7XxYnW.s 			page 2


  34:Src/usbd_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  35:Src/usbd_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  36:Src/usbd_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  37:Src/usbd_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  38:Src/usbd_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  39:Src/usbd_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  40:Src/usbd_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  41:Src/usbd_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  42:Src/usbd_conf.c ****   *
  43:Src/usbd_conf.c ****   ******************************************************************************
  44:Src/usbd_conf.c ****   */
  45:Src/usbd_conf.c **** 
  46:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  47:Src/usbd_conf.c **** #include "stm32f0xx_hal.h"
  48:Src/usbd_conf.c **** #include "usbd_core.h"
  49:Src/usbd_conf.c **** #include "main.h"
  50:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  51:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  52:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  53:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  54:Src/usbd_conf.c **** PCD_HandleTypeDef hpcd;
  55:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  56:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  57:Src/usbd_conf.c **** 
  58:Src/usbd_conf.c **** /*******************************************************************************
  59:Src/usbd_conf.c ****                        PCD BSP Routines
  60:Src/usbd_conf.c **** *******************************************************************************/
  61:Src/usbd_conf.c **** 
  62:Src/usbd_conf.c **** /**
  63:Src/usbd_conf.c ****   * @brief  Initializes the PCD MSP.
  64:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
  65:Src/usbd_conf.c ****   * @retval None
  66:Src/usbd_conf.c ****   */
  67:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd)
  68:Src/usbd_conf.c **** {
  26              		.loc 1 68 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  39              	.LBB2:
  69:Src/usbd_conf.c ****   GPIO_InitTypeDef  GPIO_InitStruct;
  70:Src/usbd_conf.c ****   
  71:Src/usbd_conf.c ****   /* Enable the GPIOA clock */
  72:Src/usbd_conf.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  40              		.loc 1 72 0
  41 0004 154C     		ldr	r4, .L2
  42 0006 6269     		ldr	r2, [r4, #20]
  43 0008 8021     		movs	r1, #128
ARM GAS  /tmp/cc7XxYnW.s 			page 3


  44 000a 8902     		lsls	r1, r1, #10
  45 000c 0A43     		orrs	r2, r1
  46 000e 6261     		str	r2, [r4, #20]
  47 0010 6369     		ldr	r3, [r4, #20]
  48 0012 0B40     		ands	r3, r1
  49 0014 0193     		str	r3, [sp, #4]
  50 0016 019B     		ldr	r3, [sp, #4]
  51              	.LBE2:
  73:Src/usbd_conf.c ****   
  74:Src/usbd_conf.c ****   /* Configure USB DM and DP pins.
  75:Src/usbd_conf.c ****      This is optional, and maintained only for user guidance. */
  76:Src/usbd_conf.c ****   GPIO_InitStruct.Pin = (GPIO_PIN_11 | GPIO_PIN_12);
  52              		.loc 1 76 0
  53 0018 C023     		movs	r3, #192
  54 001a 5B01     		lsls	r3, r3, #5
  55 001c 0393     		str	r3, [sp, #12]
  77:Src/usbd_conf.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  56              		.loc 1 77 0
  57 001e 0223     		movs	r3, #2
  58 0020 0493     		str	r3, [sp, #16]
  78:Src/usbd_conf.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  59              		.loc 1 78 0
  60 0022 0022     		movs	r2, #0
  61 0024 0592     		str	r2, [sp, #20]
  79:Src/usbd_conf.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  62              		.loc 1 79 0
  63 0026 0332     		adds	r2, r2, #3
  64 0028 0692     		str	r2, [sp, #24]
  80:Src/usbd_conf.c ****   GPIO_InitStruct.Alternate = GPIO_AF2_USB;
  65              		.loc 1 80 0
  66 002a 0793     		str	r3, [sp, #28]
  81:Src/usbd_conf.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct); 
  67              		.loc 1 81 0
  68 002c 9020     		movs	r0, #144
  69              	.LVL1:
  70 002e 03A9     		add	r1, sp, #12
  71 0030 C005     		lsls	r0, r0, #23
  72 0032 FFF7FEFF 		bl	HAL_GPIO_Init
  73              	.LVL2:
  74              	.LBB3:
  82:Src/usbd_conf.c ****   
  83:Src/usbd_conf.c ****   /* Enable USB FS Clock */
  84:Src/usbd_conf.c ****   __HAL_RCC_USB_CLK_ENABLE();
  75              		.loc 1 84 0
  76 0036 E269     		ldr	r2, [r4, #28]
  77 0038 8021     		movs	r1, #128
  78 003a 0904     		lsls	r1, r1, #16
  79 003c 0A43     		orrs	r2, r1
  80 003e E261     		str	r2, [r4, #28]
  81 0040 E369     		ldr	r3, [r4, #28]
  82 0042 0B40     		ands	r3, r1
  83 0044 0293     		str	r3, [sp, #8]
  84 0046 029B     		ldr	r3, [sp, #8]
  85              	.LBE3:
  85:Src/usbd_conf.c ****   
  86:Src/usbd_conf.c ****   /* Set USB FS Interrupt priority */
  87:Src/usbd_conf.c ****   HAL_NVIC_SetPriority(USB_IRQn, 3, 0);
ARM GAS  /tmp/cc7XxYnW.s 			page 4


  86              		.loc 1 87 0
  87 0048 0022     		movs	r2, #0
  88 004a 0321     		movs	r1, #3
  89 004c 1F20     		movs	r0, #31
  90 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  91              	.LVL3:
  88:Src/usbd_conf.c ****   
  89:Src/usbd_conf.c ****   /* Enable USB FS Interrupt */
  90:Src/usbd_conf.c ****   HAL_NVIC_EnableIRQ(USB_IRQn);
  92              		.loc 1 90 0
  93 0052 1F20     		movs	r0, #31
  94 0054 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  95              	.LVL4:
  91:Src/usbd_conf.c **** }
  96              		.loc 1 91 0
  97 0058 08B0     		add	sp, sp, #32
  98              		@ sp needed
  99 005a 10BD     		pop	{r4, pc}
 100              	.L3:
 101              		.align	2
 102              	.L2:
 103 005c 00100240 		.word	1073876992
 104              		.cfi_endproc
 105              	.LFE37:
 107              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
 108              		.align	1
 109              		.global	HAL_PCD_MspDeInit
 110              		.syntax unified
 111              		.code	16
 112              		.thumb_func
 113              		.fpu softvfp
 115              	HAL_PCD_MspDeInit:
 116              	.LFB38:
  92:Src/usbd_conf.c **** 
  93:Src/usbd_conf.c **** /**
  94:Src/usbd_conf.c ****   * @brief  De-Initializes the PCD MSP.
  95:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
  96:Src/usbd_conf.c ****   * @retval None
  97:Src/usbd_conf.c ****   */
  98:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef *hpcd)
  99:Src/usbd_conf.c **** {
 117              		.loc 1 99 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL5:
 100:Src/usbd_conf.c ****   /* Disable USB FS Clock */
 101:Src/usbd_conf.c ****   __HAL_RCC_USB_CLK_DISABLE();
 123              		.loc 1 101 0
 124 0000 024A     		ldr	r2, .L5
 125 0002 D369     		ldr	r3, [r2, #28]
 126 0004 0249     		ldr	r1, .L5+4
 127 0006 0B40     		ands	r3, r1
 128 0008 D361     		str	r3, [r2, #28]
 102:Src/usbd_conf.c **** }
 129              		.loc 1 102 0
ARM GAS  /tmp/cc7XxYnW.s 			page 5


 130              		@ sp needed
 131 000a 7047     		bx	lr
 132              	.L6:
 133              		.align	2
 134              	.L5:
 135 000c 00100240 		.word	1073876992
 136 0010 FFFF7FFF 		.word	-8388609
 137              		.cfi_endproc
 138              	.LFE38:
 140              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 141              		.align	1
 142              		.global	HAL_PCD_SetupStageCallback
 143              		.syntax unified
 144              		.code	16
 145              		.thumb_func
 146              		.fpu softvfp
 148              	HAL_PCD_SetupStageCallback:
 149              	.LFB39:
 103:Src/usbd_conf.c **** 
 104:Src/usbd_conf.c **** /*******************************************************************************
 105:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
 106:Src/usbd_conf.c **** *******************************************************************************/
 107:Src/usbd_conf.c **** 
 108:Src/usbd_conf.c **** /**
 109:Src/usbd_conf.c ****   * @brief  SOF callback.
 110:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 111:Src/usbd_conf.c ****   * @retval None
 112:Src/usbd_conf.c ****   */
 113:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 114:Src/usbd_conf.c **** {
 150              		.loc 1 114 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL6:
 155 0000 10B5     		push	{r4, lr}
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 160 0002 0100     		movs	r1, r0
 115:Src/usbd_conf.c ****   USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 161              		.loc 1 115 0
 162 0004 8723     		movs	r3, #135
 163 0006 9B00     		lsls	r3, r3, #2
 164 0008 C058     		ldr	r0, [r0, r3]
 165              	.LVL7:
 166 000a ED31     		adds	r1, r1, #237
 167              	.LVL8:
 168 000c FF31     		adds	r1, r1, #255
 169              	.LVL9:
 170 000e FFF7FEFF 		bl	USBD_LL_SetupStage
 171              	.LVL10:
 116:Src/usbd_conf.c **** }
 172              		.loc 1 116 0
 173              		@ sp needed
 174 0012 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc7XxYnW.s 			page 6


 175              		.cfi_endproc
 176              	.LFE39:
 178              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 179              		.align	1
 180              		.global	HAL_PCD_DataOutStageCallback
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 184              		.fpu softvfp
 186              	HAL_PCD_DataOutStageCallback:
 187              	.LFB40:
 117:Src/usbd_conf.c **** 
 118:Src/usbd_conf.c **** /**
 119:Src/usbd_conf.c ****   * @brief  SOF callback.
 120:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 121:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 122:Src/usbd_conf.c ****   * @retval None
 123:Src/usbd_conf.c ****   */
 124:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 125:Src/usbd_conf.c **** {
 188              		.loc 1 125 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL11:
 193 0000 10B5     		push	{r4, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198 0002 0300     		movs	r3, r0
 126:Src/usbd_conf.c ****   USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 199              		.loc 1 126 0
 200 0004 8722     		movs	r2, #135
 201 0006 9200     		lsls	r2, r2, #2
 202 0008 8058     		ldr	r0, [r0, r2]
 203              	.LVL12:
 204 000a CA00     		lsls	r2, r1, #3
 205 000c 521A     		subs	r2, r2, r1
 206 000e 9400     		lsls	r4, r2, #2
 207 0010 1B19     		adds	r3, r3, r4
 208              	.LVL13:
 209 0012 1933     		adds	r3, r3, #25
 210 0014 FF33     		adds	r3, r3, #255
 211 0016 1A68     		ldr	r2, [r3]
 212 0018 FFF7FEFF 		bl	USBD_LL_DataOutStage
 213              	.LVL14:
 127:Src/usbd_conf.c **** }
 214              		.loc 1 127 0
 215              		@ sp needed
 216 001c 10BD     		pop	{r4, pc}
 217              		.cfi_endproc
 218              	.LFE40:
 220              		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 221              		.align	1
 222              		.global	HAL_PCD_DataInStageCallback
 223              		.syntax unified
ARM GAS  /tmp/cc7XxYnW.s 			page 7


 224              		.code	16
 225              		.thumb_func
 226              		.fpu softvfp
 228              	HAL_PCD_DataInStageCallback:
 229              	.LFB41:
 128:Src/usbd_conf.c **** 
 129:Src/usbd_conf.c **** /**
 130:Src/usbd_conf.c ****   * @brief  SOF callback.
 131:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 132:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 133:Src/usbd_conf.c ****   * @retval None
 134:Src/usbd_conf.c ****   */
 135:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 136:Src/usbd_conf.c **** {
 230              		.loc 1 136 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              	.LVL15:
 235 0000 10B5     		push	{r4, lr}
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 14, -4
 240 0002 0300     		movs	r3, r0
 137:Src/usbd_conf.c ****   USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 241              		.loc 1 137 0
 242 0004 8722     		movs	r2, #135
 243 0006 9200     		lsls	r2, r2, #2
 244 0008 8058     		ldr	r0, [r0, r2]
 245              	.LVL16:
 246 000a CA00     		lsls	r2, r1, #3
 247 000c 521A     		subs	r2, r2, r1
 248 000e 9400     		lsls	r4, r2, #2
 249 0010 1B19     		adds	r3, r3, r4
 250              	.LVL17:
 251 0012 9A6B     		ldr	r2, [r3, #56]
 252 0014 FFF7FEFF 		bl	USBD_LL_DataInStage
 253              	.LVL18:
 138:Src/usbd_conf.c **** }
 254              		.loc 1 138 0
 255              		@ sp needed
 256 0018 10BD     		pop	{r4, pc}
 257              		.cfi_endproc
 258              	.LFE41:
 260              		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 261              		.align	1
 262              		.global	HAL_PCD_SOFCallback
 263              		.syntax unified
 264              		.code	16
 265              		.thumb_func
 266              		.fpu softvfp
 268              	HAL_PCD_SOFCallback:
 269              	.LFB42:
 139:Src/usbd_conf.c **** 
 140:Src/usbd_conf.c **** /**
 141:Src/usbd_conf.c ****   * @brief  SOF callback.
ARM GAS  /tmp/cc7XxYnW.s 			page 8


 142:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 143:Src/usbd_conf.c ****   * @retval None
 144:Src/usbd_conf.c ****   */
 145:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 146:Src/usbd_conf.c **** {
 270              		.loc 1 146 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              	.LVL19:
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI5:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 147:Src/usbd_conf.c ****   USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 280              		.loc 1 147 0
 281 0002 8723     		movs	r3, #135
 282 0004 9B00     		lsls	r3, r3, #2
 283 0006 C058     		ldr	r0, [r0, r3]
 284              	.LVL20:
 285 0008 FFF7FEFF 		bl	USBD_LL_SOF
 286              	.LVL21:
 148:Src/usbd_conf.c **** }
 287              		.loc 1 148 0
 288              		@ sp needed
 289 000c 10BD     		pop	{r4, pc}
 290              		.cfi_endproc
 291              	.LFE42:
 293              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 294              		.align	1
 295              		.global	HAL_PCD_ResetCallback
 296              		.syntax unified
 297              		.code	16
 298              		.thumb_func
 299              		.fpu softvfp
 301              	HAL_PCD_ResetCallback:
 302              	.LFB43:
 149:Src/usbd_conf.c **** 
 150:Src/usbd_conf.c **** /**
 151:Src/usbd_conf.c ****   * @brief  SOF callback.
 152:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 153:Src/usbd_conf.c ****   * @retval None
 154:Src/usbd_conf.c ****   */
 155:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 156:Src/usbd_conf.c **** {   
 303              		.loc 1 156 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL22:
 308 0000 70B5     		push	{r4, r5, r6, lr}
 309              	.LCFI6:
 310              		.cfi_def_cfa_offset 16
 311              		.cfi_offset 4, -16
 312              		.cfi_offset 5, -12
 313              		.cfi_offset 6, -8
ARM GAS  /tmp/cc7XxYnW.s 			page 9


 314              		.cfi_offset 14, -4
 315 0002 0500     		movs	r5, r0
 157:Src/usbd_conf.c ****   USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, USBD_SPEED_FULL);
 316              		.loc 1 157 0
 317 0004 8724     		movs	r4, #135
 318 0006 A400     		lsls	r4, r4, #2
 319 0008 0121     		movs	r1, #1
 320 000a 0059     		ldr	r0, [r0, r4]
 321              	.LVL23:
 322 000c FFF7FEFF 		bl	USBD_LL_SetSpeed
 323              	.LVL24:
 158:Src/usbd_conf.c ****   /* Reset Device */
 159:Src/usbd_conf.c ****   USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 324              		.loc 1 159 0
 325 0010 2859     		ldr	r0, [r5, r4]
 326 0012 FFF7FEFF 		bl	USBD_LL_Reset
 327              	.LVL25:
 160:Src/usbd_conf.c **** }
 328              		.loc 1 160 0
 329              		@ sp needed
 330              	.LVL26:
 331 0016 70BD     		pop	{r4, r5, r6, pc}
 332              		.cfi_endproc
 333              	.LFE43:
 335              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 336              		.align	1
 337              		.global	HAL_PCD_SuspendCallback
 338              		.syntax unified
 339              		.code	16
 340              		.thumb_func
 341              		.fpu softvfp
 343              	HAL_PCD_SuspendCallback:
 344              	.LFB44:
 161:Src/usbd_conf.c **** 
 162:Src/usbd_conf.c **** /**
 163:Src/usbd_conf.c ****   * @brief  SOF callback.
 164:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 165:Src/usbd_conf.c ****   * @retval None
 166:Src/usbd_conf.c ****   */
 167:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 168:Src/usbd_conf.c **** {
 345              		.loc 1 168 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              	.LVL27:
 169:Src/usbd_conf.c **** }
 351              		.loc 1 169 0
 352              		@ sp needed
 353 0000 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE44:
 357              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 358              		.align	1
 359              		.global	HAL_PCD_ResumeCallback
 360              		.syntax unified
ARM GAS  /tmp/cc7XxYnW.s 			page 10


 361              		.code	16
 362              		.thumb_func
 363              		.fpu softvfp
 365              	HAL_PCD_ResumeCallback:
 366              	.LFB45:
 170:Src/usbd_conf.c **** 
 171:Src/usbd_conf.c **** /**
 172:Src/usbd_conf.c ****   * @brief  SOF callback.
 173:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 174:Src/usbd_conf.c ****   * @retval None
 175:Src/usbd_conf.c ****   */
 176:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 177:Src/usbd_conf.c **** {
 367              		.loc 1 177 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL28:
 178:Src/usbd_conf.c **** }
 373              		.loc 1 178 0
 374              		@ sp needed
 375 0000 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE45:
 379              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 380              		.align	1
 381              		.global	HAL_PCD_ISOOUTIncompleteCallback
 382              		.syntax unified
 383              		.code	16
 384              		.thumb_func
 385              		.fpu softvfp
 387              	HAL_PCD_ISOOUTIncompleteCallback:
 388              	.LFB46:
 179:Src/usbd_conf.c **** 
 180:Src/usbd_conf.c **** /**
 181:Src/usbd_conf.c ****   * @brief  SOF callback.
 182:Src/usbd_conf.c ****   * @param  hpcd: PCD handle 
 183:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 184:Src/usbd_conf.c ****   * @retval None
 185:Src/usbd_conf.c ****   */
 186:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 187:Src/usbd_conf.c **** {
 389              		.loc 1 187 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL29:
 394 0000 10B5     		push	{r4, lr}
 395              	.LCFI7:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 188:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 399              		.loc 1 188 0
 400 0002 8723     		movs	r3, #135
 401 0004 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/cc7XxYnW.s 			page 11


 402 0006 C058     		ldr	r0, [r0, r3]
 403              	.LVL30:
 404 0008 FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 405              	.LVL31:
 189:Src/usbd_conf.c **** }
 406              		.loc 1 189 0
 407              		@ sp needed
 408 000c 10BD     		pop	{r4, pc}
 409              		.cfi_endproc
 410              	.LFE46:
 412              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 413              		.align	1
 414              		.global	HAL_PCD_ISOINIncompleteCallback
 415              		.syntax unified
 416              		.code	16
 417              		.thumb_func
 418              		.fpu softvfp
 420              	HAL_PCD_ISOINIncompleteCallback:
 421              	.LFB47:
 190:Src/usbd_conf.c **** 
 191:Src/usbd_conf.c **** /**
 192:Src/usbd_conf.c ****   * @brief  SOF callback.
 193:Src/usbd_conf.c ****   * @param  hpcd: PCD handle 
 194:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 195:Src/usbd_conf.c ****   * @retval None
 196:Src/usbd_conf.c ****   */
 197:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 198:Src/usbd_conf.c **** {
 422              		.loc 1 198 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              	.LVL32:
 427 0000 10B5     		push	{r4, lr}
 428              	.LCFI8:
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 4, -8
 431              		.cfi_offset 14, -4
 199:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 432              		.loc 1 199 0
 433 0002 8723     		movs	r3, #135
 434 0004 9B00     		lsls	r3, r3, #2
 435 0006 C058     		ldr	r0, [r0, r3]
 436              	.LVL33:
 437 0008 FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 438              	.LVL34:
 200:Src/usbd_conf.c **** }
 439              		.loc 1 200 0
 440              		@ sp needed
 441 000c 10BD     		pop	{r4, pc}
 442              		.cfi_endproc
 443              	.LFE47:
 445              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 446              		.align	1
 447              		.global	HAL_PCD_ConnectCallback
 448              		.syntax unified
 449              		.code	16
ARM GAS  /tmp/cc7XxYnW.s 			page 12


 450              		.thumb_func
 451              		.fpu softvfp
 453              	HAL_PCD_ConnectCallback:
 454              	.LFB48:
 201:Src/usbd_conf.c **** 
 202:Src/usbd_conf.c **** /**
 203:Src/usbd_conf.c ****   * @brief  SOF callback.
 204:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 205:Src/usbd_conf.c ****   * @retval None
 206:Src/usbd_conf.c ****   */
 207:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 208:Src/usbd_conf.c **** {
 455              		.loc 1 208 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              	.LVL35:
 460 0000 10B5     		push	{r4, lr}
 461              	.LCFI9:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 4, -8
 464              		.cfi_offset 14, -4
 209:Src/usbd_conf.c ****   USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 465              		.loc 1 209 0
 466 0002 8723     		movs	r3, #135
 467 0004 9B00     		lsls	r3, r3, #2
 468 0006 C058     		ldr	r0, [r0, r3]
 469              	.LVL36:
 470 0008 FFF7FEFF 		bl	USBD_LL_DevConnected
 471              	.LVL37:
 210:Src/usbd_conf.c **** }
 472              		.loc 1 210 0
 473              		@ sp needed
 474 000c 10BD     		pop	{r4, pc}
 475              		.cfi_endproc
 476              	.LFE48:
 478              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 479              		.align	1
 480              		.global	HAL_PCD_DisconnectCallback
 481              		.syntax unified
 482              		.code	16
 483              		.thumb_func
 484              		.fpu softvfp
 486              	HAL_PCD_DisconnectCallback:
 487              	.LFB49:
 211:Src/usbd_conf.c **** 
 212:Src/usbd_conf.c **** /**
 213:Src/usbd_conf.c ****   * @brief  SOF callback.
 214:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 215:Src/usbd_conf.c ****   * @retval None
 216:Src/usbd_conf.c ****   */
 217:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 218:Src/usbd_conf.c **** {
 488              		.loc 1 218 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc7XxYnW.s 			page 13


 492              	.LVL38:
 493 0000 10B5     		push	{r4, lr}
 494              	.LCFI10:
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 4, -8
 497              		.cfi_offset 14, -4
 219:Src/usbd_conf.c ****   USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 498              		.loc 1 219 0
 499 0002 8723     		movs	r3, #135
 500 0004 9B00     		lsls	r3, r3, #2
 501 0006 C058     		ldr	r0, [r0, r3]
 502              	.LVL39:
 503 0008 FFF7FEFF 		bl	USBD_LL_DevDisconnected
 504              	.LVL40:
 220:Src/usbd_conf.c **** }
 505              		.loc 1 220 0
 506              		@ sp needed
 507 000c 10BD     		pop	{r4, pc}
 508              		.cfi_endproc
 509              	.LFE49:
 511              		.section	.text.USBD_LL_Init,"ax",%progbits
 512              		.align	1
 513              		.global	USBD_LL_Init
 514              		.syntax unified
 515              		.code	16
 516              		.thumb_func
 517              		.fpu softvfp
 519              	USBD_LL_Init:
 520              	.LFB50:
 221:Src/usbd_conf.c **** 
 222:Src/usbd_conf.c **** /*******************************************************************************
 223:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 224:Src/usbd_conf.c **** *******************************************************************************/
 225:Src/usbd_conf.c **** 
 226:Src/usbd_conf.c **** /**
 227:Src/usbd_conf.c ****   * @brief  Initializes the Low Level portion of the Device driver.
 228:Src/usbd_conf.c ****   * @param  pdev: Device handle
 229:Src/usbd_conf.c ****   * @retval USBD Status
 230:Src/usbd_conf.c ****   */
 231:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
 232:Src/usbd_conf.c **** {    
 521              		.loc 1 232 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              	.LVL41:
 526 0000 10B5     		push	{r4, lr}
 527              	.LCFI11:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 233:Src/usbd_conf.c ****   /* Set LL Driver parameters */
 234:Src/usbd_conf.c ****   hpcd.Instance = USB;
 531              		.loc 1 234 0
 532 0002 1A4C     		ldr	r4, .L19
 533 0004 1A4B     		ldr	r3, .L19+4
 534 0006 2360     		str	r3, [r4]
ARM GAS  /tmp/cc7XxYnW.s 			page 14


 235:Src/usbd_conf.c ****   hpcd.Init.dev_endpoints = 8;
 535              		.loc 1 235 0
 536 0008 0823     		movs	r3, #8
 537 000a 6360     		str	r3, [r4, #4]
 236:Src/usbd_conf.c ****   hpcd.Init.ep0_mps = 0x40;
 538              		.loc 1 236 0
 539 000c 3833     		adds	r3, r3, #56
 540 000e E360     		str	r3, [r4, #12]
 237:Src/usbd_conf.c ****   hpcd.Init.phy_itface = PCD_PHY_EMBEDDED;
 541              		.loc 1 237 0
 542 0010 3E3B     		subs	r3, r3, #62
 543 0012 2361     		str	r3, [r4, #16]
 238:Src/usbd_conf.c ****   hpcd.Init.speed = PCD_SPEED_FULL;
 544              		.loc 1 238 0
 545 0014 A360     		str	r3, [r4, #8]
 239:Src/usbd_conf.c ****   /* Link The driver to the stack */
 240:Src/usbd_conf.c ****   hpcd.pData = pdev;
 546              		.loc 1 240 0
 547 0016 8723     		movs	r3, #135
 548 0018 9B00     		lsls	r3, r3, #2
 549 001a E050     		str	r0, [r4, r3]
 241:Src/usbd_conf.c ****   pdev->pData = &hpcd;
 550              		.loc 1 241 0
 551 001c 0433     		adds	r3, r3, #4
 552 001e C450     		str	r4, [r0, r3]
 242:Src/usbd_conf.c ****   /* Initialize LL Driver */
 243:Src/usbd_conf.c ****   HAL_PCD_Init(&hpcd);
 553              		.loc 1 243 0
 554 0020 2000     		movs	r0, r4
 555              	.LVL42:
 556 0022 FFF7FEFF 		bl	HAL_PCD_Init
 557              	.LVL43:
 244:Src/usbd_conf.c ****   
 245:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , 0x00 , PCD_SNG_BUF, 0x40);
 558              		.loc 1 245 0
 559 0026 4023     		movs	r3, #64
 560 0028 0022     		movs	r2, #0
 561 002a 0021     		movs	r1, #0
 562 002c 2000     		movs	r0, r4
 563 002e FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 564              	.LVL44:
 246:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , 0x80 , PCD_SNG_BUF, 0x80);
 565              		.loc 1 246 0
 566 0032 8023     		movs	r3, #128
 567 0034 0022     		movs	r2, #0
 568 0036 8021     		movs	r1, #128
 569 0038 2000     		movs	r0, r4
 570 003a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 571              	.LVL45:
 247:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , CDC_IN_EP , PCD_SNG_BUF, 0xC0);  
 572              		.loc 1 247 0
 573 003e C023     		movs	r3, #192
 574 0040 0022     		movs	r2, #0
 575 0042 8121     		movs	r1, #129
 576 0044 2000     		movs	r0, r4
 577 0046 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 578              	.LVL46:
ARM GAS  /tmp/cc7XxYnW.s 			page 15


 248:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , CDC_OUT_EP , PCD_SNG_BUF, 0x110);
 579              		.loc 1 248 0
 580 004a 8823     		movs	r3, #136
 581 004c 5B00     		lsls	r3, r3, #1
 582 004e 0022     		movs	r2, #0
 583 0050 0121     		movs	r1, #1
 584 0052 2000     		movs	r0, r4
 585 0054 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 586              	.LVL47:
 249:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(&hpcd , CDC_CMD_EP , PCD_SNG_BUF, 0x100);   
 587              		.loc 1 249 0
 588 0058 8023     		movs	r3, #128
 589 005a 5B00     		lsls	r3, r3, #1
 590 005c 0022     		movs	r2, #0
 591 005e 8221     		movs	r1, #130
 592 0060 2000     		movs	r0, r4
 593 0062 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 594              	.LVL48:
 250:Src/usbd_conf.c **** 
 251:Src/usbd_conf.c ****   return USBD_OK;
 252:Src/usbd_conf.c **** }
 595              		.loc 1 252 0
 596 0066 0020     		movs	r0, #0
 597              		@ sp needed
 598 0068 10BD     		pop	{r4, pc}
 599              	.L20:
 600 006a C046     		.align	2
 601              	.L19:
 602 006c 00000000 		.word	hpcd
 603 0070 005C0040 		.word	1073765376
 604              		.cfi_endproc
 605              	.LFE50:
 607              		.section	.text.USBD_LL_DeInit,"ax",%progbits
 608              		.align	1
 609              		.global	USBD_LL_DeInit
 610              		.syntax unified
 611              		.code	16
 612              		.thumb_func
 613              		.fpu softvfp
 615              	USBD_LL_DeInit:
 616              	.LFB51:
 253:Src/usbd_conf.c **** 
 254:Src/usbd_conf.c **** /**
 255:Src/usbd_conf.c ****   * @brief  De-Initializes the Low Level portion of the Device driver.
 256:Src/usbd_conf.c ****   * @param  pdev: Device handle
 257:Src/usbd_conf.c ****   * @retval USBD Status
 258:Src/usbd_conf.c ****   */
 259:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_DeInit(USBD_HandleTypeDef *pdev)
 260:Src/usbd_conf.c **** {
 617              		.loc 1 260 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL49:
 622 0000 10B5     		push	{r4, lr}
 623              	.LCFI12:
 624              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc7XxYnW.s 			page 16


 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
 261:Src/usbd_conf.c ****   HAL_PCD_DeInit((PCD_HandleTypeDef*)pdev->pData);
 627              		.loc 1 261 0
 628 0002 8823     		movs	r3, #136
 629 0004 9B00     		lsls	r3, r3, #2
 630 0006 C058     		ldr	r0, [r0, r3]
 631              	.LVL50:
 632 0008 FFF7FEFF 		bl	HAL_PCD_DeInit
 633              	.LVL51:
 262:Src/usbd_conf.c ****   return USBD_OK;
 263:Src/usbd_conf.c **** }
 634              		.loc 1 263 0
 635 000c 0020     		movs	r0, #0
 636              		@ sp needed
 637 000e 10BD     		pop	{r4, pc}
 638              		.cfi_endproc
 639              	.LFE51:
 641              		.section	.text.USBD_LL_Start,"ax",%progbits
 642              		.align	1
 643              		.global	USBD_LL_Start
 644              		.syntax unified
 645              		.code	16
 646              		.thumb_func
 647              		.fpu softvfp
 649              	USBD_LL_Start:
 650              	.LFB52:
 264:Src/usbd_conf.c **** 
 265:Src/usbd_conf.c **** /**
 266:Src/usbd_conf.c ****   * @brief  Starts the Low Level portion of the Device driver. 
 267:Src/usbd_conf.c ****   * @param  pdev: Device handle
 268:Src/usbd_conf.c ****   * @retval USBD Status
 269:Src/usbd_conf.c ****   */
 270:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
 271:Src/usbd_conf.c **** {
 651              		.loc 1 271 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              	.LVL52:
 656 0000 10B5     		push	{r4, lr}
 657              	.LCFI13:
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 4, -8
 660              		.cfi_offset 14, -4
 272:Src/usbd_conf.c ****   HAL_PCD_Start((PCD_HandleTypeDef*)pdev->pData);
 661              		.loc 1 272 0
 662 0002 8823     		movs	r3, #136
 663 0004 9B00     		lsls	r3, r3, #2
 664 0006 C058     		ldr	r0, [r0, r3]
 665              	.LVL53:
 666 0008 FFF7FEFF 		bl	HAL_PCD_Start
 667              	.LVL54:
 273:Src/usbd_conf.c ****   return USBD_OK;
 274:Src/usbd_conf.c **** }
 668              		.loc 1 274 0
 669 000c 0020     		movs	r0, #0
ARM GAS  /tmp/cc7XxYnW.s 			page 17


 670              		@ sp needed
 671 000e 10BD     		pop	{r4, pc}
 672              		.cfi_endproc
 673              	.LFE52:
 675              		.section	.text.USBD_LL_Stop,"ax",%progbits
 676              		.align	1
 677              		.global	USBD_LL_Stop
 678              		.syntax unified
 679              		.code	16
 680              		.thumb_func
 681              		.fpu softvfp
 683              	USBD_LL_Stop:
 684              	.LFB53:
 275:Src/usbd_conf.c **** 
 276:Src/usbd_conf.c **** /**
 277:Src/usbd_conf.c ****   * @brief  Stops the Low Level portion of the Device driver.
 278:Src/usbd_conf.c ****   * @param  pdev: Device handle
 279:Src/usbd_conf.c ****   * @retval USBD Status
 280:Src/usbd_conf.c ****   */
 281:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Stop(USBD_HandleTypeDef *pdev)
 282:Src/usbd_conf.c **** {
 685              		.loc 1 282 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              	.LVL55:
 690 0000 10B5     		push	{r4, lr}
 691              	.LCFI14:
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 4, -8
 694              		.cfi_offset 14, -4
 283:Src/usbd_conf.c ****   HAL_PCD_Stop((PCD_HandleTypeDef*)pdev->pData);
 695              		.loc 1 283 0
 696 0002 8823     		movs	r3, #136
 697 0004 9B00     		lsls	r3, r3, #2
 698 0006 C058     		ldr	r0, [r0, r3]
 699              	.LVL56:
 700 0008 FFF7FEFF 		bl	HAL_PCD_Stop
 701              	.LVL57:
 284:Src/usbd_conf.c ****   return USBD_OK;
 285:Src/usbd_conf.c **** }
 702              		.loc 1 285 0
 703 000c 0020     		movs	r0, #0
 704              		@ sp needed
 705 000e 10BD     		pop	{r4, pc}
 706              		.cfi_endproc
 707              	.LFE53:
 709              		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 710              		.align	1
 711              		.global	USBD_LL_OpenEP
 712              		.syntax unified
 713              		.code	16
 714              		.thumb_func
 715              		.fpu softvfp
 717              	USBD_LL_OpenEP:
 718              	.LFB54:
 286:Src/usbd_conf.c **** 
ARM GAS  /tmp/cc7XxYnW.s 			page 18


 287:Src/usbd_conf.c **** /**
 288:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the Low Level Driver.
 289:Src/usbd_conf.c ****   * @param  pdev: Device handle
 290:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 291:Src/usbd_conf.c ****   * @param  ep_type: Endpoint Type
 292:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint Max Packet Size
 293:Src/usbd_conf.c ****   * @retval USBD Status
 294:Src/usbd_conf.c ****   */
 295:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev,
 296:Src/usbd_conf.c ****                                   uint8_t ep_addr,
 297:Src/usbd_conf.c ****                                   uint8_t ep_type,
 298:Src/usbd_conf.c ****                                   uint16_t ep_mps)
 299:Src/usbd_conf.c **** {
 719              		.loc 1 299 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              	.LVL58:
 724 0000 10B5     		push	{r4, lr}
 725              	.LCFI15:
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 4, -8
 728              		.cfi_offset 14, -4
 729 0002 1400     		movs	r4, r2
 730 0004 1A00     		movs	r2, r3
 731              	.LVL59:
 300:Src/usbd_conf.c ****   HAL_PCD_EP_Open((PCD_HandleTypeDef*)pdev->pData,
 732              		.loc 1 300 0
 733 0006 8823     		movs	r3, #136
 734              	.LVL60:
 735 0008 9B00     		lsls	r3, r3, #2
 736 000a C058     		ldr	r0, [r0, r3]
 737              	.LVL61:
 738 000c 2300     		movs	r3, r4
 739 000e FFF7FEFF 		bl	HAL_PCD_EP_Open
 740              	.LVL62:
 301:Src/usbd_conf.c ****                   ep_addr,
 302:Src/usbd_conf.c ****                   ep_mps,
 303:Src/usbd_conf.c ****                   ep_type);
 304:Src/usbd_conf.c ****   
 305:Src/usbd_conf.c ****   return USBD_OK;
 306:Src/usbd_conf.c **** }
 741              		.loc 1 306 0
 742 0012 0020     		movs	r0, #0
 743              		@ sp needed
 744 0014 10BD     		pop	{r4, pc}
 745              		.cfi_endproc
 746              	.LFE54:
 748              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
 749              		.align	1
 750              		.global	USBD_LL_CloseEP
 751              		.syntax unified
 752              		.code	16
 753              		.thumb_func
 754              		.fpu softvfp
 756              	USBD_LL_CloseEP:
 757              	.LFB55:
ARM GAS  /tmp/cc7XxYnW.s 			page 19


 307:Src/usbd_conf.c **** 
 308:Src/usbd_conf.c **** /**
 309:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the Low Level Driver.
 310:Src/usbd_conf.c ****   * @param  pdev: Device handle
 311:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 312:Src/usbd_conf.c ****   * @retval USBD Status
 313:Src/usbd_conf.c ****   */
 314:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 315:Src/usbd_conf.c **** {
 758              		.loc 1 315 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              	.LVL63:
 763 0000 10B5     		push	{r4, lr}
 764              	.LCFI16:
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 4, -8
 767              		.cfi_offset 14, -4
 316:Src/usbd_conf.c ****   HAL_PCD_EP_Close((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 768              		.loc 1 316 0
 769 0002 8823     		movs	r3, #136
 770 0004 9B00     		lsls	r3, r3, #2
 771 0006 C058     		ldr	r0, [r0, r3]
 772              	.LVL64:
 773 0008 FFF7FEFF 		bl	HAL_PCD_EP_Close
 774              	.LVL65:
 317:Src/usbd_conf.c ****   return USBD_OK;
 318:Src/usbd_conf.c **** }
 775              		.loc 1 318 0
 776 000c 0020     		movs	r0, #0
 777              		@ sp needed
 778 000e 10BD     		pop	{r4, pc}
 779              		.cfi_endproc
 780              	.LFE55:
 782              		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 783              		.align	1
 784              		.global	USBD_LL_FlushEP
 785              		.syntax unified
 786              		.code	16
 787              		.thumb_func
 788              		.fpu softvfp
 790              	USBD_LL_FlushEP:
 791              	.LFB56:
 319:Src/usbd_conf.c **** 
 320:Src/usbd_conf.c **** /**
 321:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 322:Src/usbd_conf.c ****   * @param  pdev: Device handle
 323:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 324:Src/usbd_conf.c ****   * @retval USBD Status
 325:Src/usbd_conf.c ****   */
 326:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_FlushEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 327:Src/usbd_conf.c **** {
 792              		.loc 1 327 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc7XxYnW.s 			page 20


 796              	.LVL66:
 797 0000 10B5     		push	{r4, lr}
 798              	.LCFI17:
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 4, -8
 801              		.cfi_offset 14, -4
 328:Src/usbd_conf.c ****   HAL_PCD_EP_Flush((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 802              		.loc 1 328 0
 803 0002 8823     		movs	r3, #136
 804 0004 9B00     		lsls	r3, r3, #2
 805 0006 C058     		ldr	r0, [r0, r3]
 806              	.LVL67:
 807 0008 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 808              	.LVL68:
 329:Src/usbd_conf.c ****   return USBD_OK;
 330:Src/usbd_conf.c **** }
 809              		.loc 1 330 0
 810 000c 0020     		movs	r0, #0
 811              		@ sp needed
 812 000e 10BD     		pop	{r4, pc}
 813              		.cfi_endproc
 814              	.LFE56:
 816              		.section	.text.USBD_LL_StallEP,"ax",%progbits
 817              		.align	1
 818              		.global	USBD_LL_StallEP
 819              		.syntax unified
 820              		.code	16
 821              		.thumb_func
 822              		.fpu softvfp
 824              	USBD_LL_StallEP:
 825              	.LFB57:
 331:Src/usbd_conf.c **** 
 332:Src/usbd_conf.c **** /**
 333:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 334:Src/usbd_conf.c ****   * @param  pdev: Device handle
 335:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 336:Src/usbd_conf.c ****   * @retval USBD Status
 337:Src/usbd_conf.c ****   */
 338:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 339:Src/usbd_conf.c **** {
 826              		.loc 1 339 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              	.LVL69:
 831 0000 10B5     		push	{r4, lr}
 832              	.LCFI18:
 833              		.cfi_def_cfa_offset 8
 834              		.cfi_offset 4, -8
 835              		.cfi_offset 14, -4
 340:Src/usbd_conf.c ****   HAL_PCD_EP_SetStall((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 836              		.loc 1 340 0
 837 0002 8823     		movs	r3, #136
 838 0004 9B00     		lsls	r3, r3, #2
 839 0006 C058     		ldr	r0, [r0, r3]
 840              	.LVL70:
 841 0008 FFF7FEFF 		bl	HAL_PCD_EP_SetStall
ARM GAS  /tmp/cc7XxYnW.s 			page 21


 842              	.LVL71:
 341:Src/usbd_conf.c ****   return USBD_OK;
 342:Src/usbd_conf.c **** }
 843              		.loc 1 342 0
 844 000c 0020     		movs	r0, #0
 845              		@ sp needed
 846 000e 10BD     		pop	{r4, pc}
 847              		.cfi_endproc
 848              	.LFE57:
 850              		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 851              		.align	1
 852              		.global	USBD_LL_ClearStallEP
 853              		.syntax unified
 854              		.code	16
 855              		.thumb_func
 856              		.fpu softvfp
 858              	USBD_LL_ClearStallEP:
 859              	.LFB58:
 343:Src/usbd_conf.c **** 
 344:Src/usbd_conf.c **** /**
 345:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 346:Src/usbd_conf.c ****   * @param  pdev: Device handle
 347:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 348:Src/usbd_conf.c ****   * @retval USBD Status
 349:Src/usbd_conf.c ****   */
 350:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 351:Src/usbd_conf.c **** {
 860              		.loc 1 351 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              	.LVL72:
 865 0000 10B5     		push	{r4, lr}
 866              	.LCFI19:
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 4, -8
 869              		.cfi_offset 14, -4
 352:Src/usbd_conf.c ****   HAL_PCD_EP_ClrStall((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 870              		.loc 1 352 0
 871 0002 8823     		movs	r3, #136
 872 0004 9B00     		lsls	r3, r3, #2
 873 0006 C058     		ldr	r0, [r0, r3]
 874              	.LVL73:
 875 0008 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 876              	.LVL74:
 353:Src/usbd_conf.c ****   return USBD_OK; 
 354:Src/usbd_conf.c **** }
 877              		.loc 1 354 0
 878 000c 0020     		movs	r0, #0
 879              		@ sp needed
 880 000e 10BD     		pop	{r4, pc}
 881              		.cfi_endproc
 882              	.LFE58:
 884              		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 885              		.align	1
 886              		.global	USBD_LL_IsStallEP
 887              		.syntax unified
ARM GAS  /tmp/cc7XxYnW.s 			page 22


 888              		.code	16
 889              		.thumb_func
 890              		.fpu softvfp
 892              	USBD_LL_IsStallEP:
 893              	.LFB59:
 355:Src/usbd_conf.c **** 
 356:Src/usbd_conf.c **** /**
 357:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 358:Src/usbd_conf.c ****   * @param  pdev: Device handle
 359:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 360:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 361:Src/usbd_conf.c ****   */
 362:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 363:Src/usbd_conf.c **** {
 894              		.loc 1 363 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899              	.LVL75:
 900 0000 0A00     		movs	r2, r1
 364:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*)pdev->pData;
 901              		.loc 1 364 0
 902 0002 8823     		movs	r3, #136
 903 0004 9B00     		lsls	r3, r3, #2
 904 0006 C358     		ldr	r3, [r0, r3]
 905              	.LVL76:
 365:Src/usbd_conf.c ****   
 366:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 906              		.loc 1 366 0
 907 0008 49B2     		sxtb	r1, r1
 908 000a 0029     		cmp	r1, #0
 909 000c 09DB     		blt	.L32
 367:Src/usbd_conf.c ****   {
 368:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 369:Src/usbd_conf.c ****   }
 370:Src/usbd_conf.c ****   else
 371:Src/usbd_conf.c ****   {
 372:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 910              		.loc 1 372 0
 911 000e 7F21     		movs	r1, #127
 912              	.LVL77:
 913 0010 1140     		ands	r1, r2
 914 0012 CA00     		lsls	r2, r1, #3
 915 0014 511A     		subs	r1, r2, r1
 916 0016 8A00     		lsls	r2, r1, #2
 917 0018 9B18     		adds	r3, r3, r2
 918              	.LVL78:
 919 001a 0B33     		adds	r3, r3, #11
 920 001c FF33     		adds	r3, r3, #255
 921 001e 1878     		ldrb	r0, [r3]
 922              	.LVL79:
 923              	.L31:
 373:Src/usbd_conf.c ****   }
 374:Src/usbd_conf.c **** }
 924              		.loc 1 374 0
 925              		@ sp needed
ARM GAS  /tmp/cc7XxYnW.s 			page 23


 926 0020 7047     		bx	lr
 927              	.LVL80:
 928              	.L32:
 368:Src/usbd_conf.c ****   }
 929              		.loc 1 368 0
 930 0022 7F21     		movs	r1, #127
 931 0024 1140     		ands	r1, r2
 932 0026 C800     		lsls	r0, r1, #3
 933              	.LVL81:
 934 0028 411A     		subs	r1, r0, r1
 935 002a 8A00     		lsls	r2, r1, #2
 936 002c 9B18     		adds	r3, r3, r2
 937              	.LVL82:
 938 002e 2A33     		adds	r3, r3, #42
 939 0030 1878     		ldrb	r0, [r3]
 940 0032 F5E7     		b	.L31
 941              		.cfi_endproc
 942              	.LFE59:
 944              		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
 945              		.align	1
 946              		.global	USBD_LL_SetUSBAddress
 947              		.syntax unified
 948              		.code	16
 949              		.thumb_func
 950              		.fpu softvfp
 952              	USBD_LL_SetUSBAddress:
 953              	.LFB60:
 375:Src/usbd_conf.c **** 
 376:Src/usbd_conf.c **** /**
 377:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 378:Src/usbd_conf.c ****   * @param  pdev: Device handle
 379:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 380:Src/usbd_conf.c ****   * @retval USBD Status
 381:Src/usbd_conf.c ****   */
 382:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
 383:Src/usbd_conf.c **** {
 954              		.loc 1 383 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL83:
 959 0000 10B5     		push	{r4, lr}
 960              	.LCFI20:
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 4, -8
 963              		.cfi_offset 14, -4
 384:Src/usbd_conf.c ****   HAL_PCD_SetAddress((PCD_HandleTypeDef*)pdev->pData, dev_addr);
 964              		.loc 1 384 0
 965 0002 8823     		movs	r3, #136
 966 0004 9B00     		lsls	r3, r3, #2
 967 0006 C058     		ldr	r0, [r0, r3]
 968              	.LVL84:
 969 0008 FFF7FEFF 		bl	HAL_PCD_SetAddress
 970              	.LVL85:
 385:Src/usbd_conf.c ****   return USBD_OK; 
 386:Src/usbd_conf.c **** }
 971              		.loc 1 386 0
ARM GAS  /tmp/cc7XxYnW.s 			page 24


 972 000c 0020     		movs	r0, #0
 973              		@ sp needed
 974 000e 10BD     		pop	{r4, pc}
 975              		.cfi_endproc
 976              	.LFE60:
 978              		.section	.text.USBD_LL_Transmit,"ax",%progbits
 979              		.align	1
 980              		.global	USBD_LL_Transmit
 981              		.syntax unified
 982              		.code	16
 983              		.thumb_func
 984              		.fpu softvfp
 986              	USBD_LL_Transmit:
 987              	.LFB61:
 387:Src/usbd_conf.c **** 
 388:Src/usbd_conf.c **** /**
 389:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 390:Src/usbd_conf.c ****   * @param  pdev: Device handle
 391:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 392:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 393:Src/usbd_conf.c ****   * @param  size: Data size    
 394:Src/usbd_conf.c ****   * @retval USBD Status
 395:Src/usbd_conf.c ****   */
 396:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, 
 397:Src/usbd_conf.c ****                                     uint8_t ep_addr,
 398:Src/usbd_conf.c ****                                     uint8_t *pbuf,
 399:Src/usbd_conf.c ****                                     uint16_t size)
 400:Src/usbd_conf.c **** {
 988              		.loc 1 400 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              	.LVL86:
 993 0000 10B5     		push	{r4, lr}
 994              	.LCFI21:
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 4, -8
 997              		.cfi_offset 14, -4
 401:Src/usbd_conf.c ****   HAL_PCD_EP_Transmit((PCD_HandleTypeDef*)pdev->pData, ep_addr, pbuf, size);
 998              		.loc 1 401 0
 999 0002 8824     		movs	r4, #136
 1000 0004 A400     		lsls	r4, r4, #2
 1001 0006 0059     		ldr	r0, [r0, r4]
 1002              	.LVL87:
 1003 0008 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 1004              	.LVL88:
 402:Src/usbd_conf.c ****   return USBD_OK;
 403:Src/usbd_conf.c **** }
 1005              		.loc 1 403 0
 1006 000c 0020     		movs	r0, #0
 1007              		@ sp needed
 1008 000e 10BD     		pop	{r4, pc}
 1009              		.cfi_endproc
 1010              	.LFE61:
 1012              		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1013              		.align	1
 1014              		.global	USBD_LL_PrepareReceive
ARM GAS  /tmp/cc7XxYnW.s 			page 25


 1015              		.syntax unified
 1016              		.code	16
 1017              		.thumb_func
 1018              		.fpu softvfp
 1020              	USBD_LL_PrepareReceive:
 1021              	.LFB62:
 404:Src/usbd_conf.c **** 
 405:Src/usbd_conf.c **** /**
 406:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 407:Src/usbd_conf.c ****   * @param  pdev: Device handle
 408:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 409:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 410:Src/usbd_conf.c ****   * @param  size: Data size
 411:Src/usbd_conf.c ****   * @retval USBD Status
 412:Src/usbd_conf.c ****   */
 413:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, 
 414:Src/usbd_conf.c ****                                           uint8_t ep_addr,
 415:Src/usbd_conf.c ****                                           uint8_t *pbuf,
 416:Src/usbd_conf.c ****                                           uint16_t size)
 417:Src/usbd_conf.c **** {
 1022              		.loc 1 417 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026              	.LVL89:
 1027 0000 10B5     		push	{r4, lr}
 1028              	.LCFI22:
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 4, -8
 1031              		.cfi_offset 14, -4
 418:Src/usbd_conf.c ****   HAL_PCD_EP_Receive((PCD_HandleTypeDef*)pdev->pData, ep_addr, pbuf, size);
 1032              		.loc 1 418 0
 1033 0002 8824     		movs	r4, #136
 1034 0004 A400     		lsls	r4, r4, #2
 1035 0006 0059     		ldr	r0, [r0, r4]
 1036              	.LVL90:
 1037 0008 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 1038              	.LVL91:
 419:Src/usbd_conf.c ****   return USBD_OK;
 420:Src/usbd_conf.c **** }
 1039              		.loc 1 420 0
 1040 000c 0020     		movs	r0, #0
 1041              		@ sp needed
 1042 000e 10BD     		pop	{r4, pc}
 1043              		.cfi_endproc
 1044              	.LFE62:
 1046              		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 1047              		.align	1
 1048              		.global	USBD_LL_GetRxDataSize
 1049              		.syntax unified
 1050              		.code	16
 1051              		.thumb_func
 1052              		.fpu softvfp
 1054              	USBD_LL_GetRxDataSize:
 1055              	.LFB63:
 421:Src/usbd_conf.c **** 
 422:Src/usbd_conf.c **** /**
ARM GAS  /tmp/cc7XxYnW.s 			page 26


 423:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 424:Src/usbd_conf.c ****   * @param  pdev: Device handle
 425:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 426:Src/usbd_conf.c ****   * @retval Recived Data Size
 427:Src/usbd_conf.c ****   */
 428:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 429:Src/usbd_conf.c **** {
 1056              		.loc 1 429 0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 1060              	.LVL92:
 1061 0000 10B5     		push	{r4, lr}
 1062              	.LCFI23:
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 4, -8
 1065              		.cfi_offset 14, -4
 430:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*)pdev->pData, ep_addr);
 1066              		.loc 1 430 0
 1067 0002 8823     		movs	r3, #136
 1068 0004 9B00     		lsls	r3, r3, #2
 1069 0006 C058     		ldr	r0, [r0, r3]
 1070              	.LVL93:
 1071 0008 FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1072              	.LVL94:
 431:Src/usbd_conf.c **** }
 1073              		.loc 1 431 0
 1074              		@ sp needed
 1075 000c 10BD     		pop	{r4, pc}
 1076              		.cfi_endproc
 1077              	.LFE63:
 1079              		.section	.text.USBD_LL_Delay,"ax",%progbits
 1080              		.align	1
 1081              		.global	USBD_LL_Delay
 1082              		.syntax unified
 1083              		.code	16
 1084              		.thumb_func
 1085              		.fpu softvfp
 1087              	USBD_LL_Delay:
 1088              	.LFB64:
 432:Src/usbd_conf.c **** 
 433:Src/usbd_conf.c **** /**
 434:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 435:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 436:Src/usbd_conf.c ****   * @retval None
 437:Src/usbd_conf.c ****   */
 438:Src/usbd_conf.c **** void USBD_LL_Delay(uint32_t Delay)
 439:Src/usbd_conf.c **** {
 1089              		.loc 1 439 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              	.LVL95:
 1094 0000 10B5     		push	{r4, lr}
 1095              	.LCFI24:
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 4, -8
ARM GAS  /tmp/cc7XxYnW.s 			page 27


 1098              		.cfi_offset 14, -4
 440:Src/usbd_conf.c ****   HAL_Delay(Delay);
 1099              		.loc 1 440 0
 1100 0002 FFF7FEFF 		bl	HAL_Delay
 1101              	.LVL96:
 441:Src/usbd_conf.c **** }
 1102              		.loc 1 441 0
 1103              		@ sp needed
 1104 0006 10BD     		pop	{r4, pc}
 1105              		.cfi_endproc
 1106              	.LFE64:
 1108              		.section	.text.USBD_static_malloc,"ax",%progbits
 1109              		.align	1
 1110              		.global	USBD_static_malloc
 1111              		.syntax unified
 1112              		.code	16
 1113              		.thumb_func
 1114              		.fpu softvfp
 1116              	USBD_static_malloc:
 1117              	.LFB65:
 442:Src/usbd_conf.c **** 
 443:Src/usbd_conf.c **** /**
 444:Src/usbd_conf.c ****   * @brief  static single allocation.
 445:Src/usbd_conf.c ****   * @param  size: size of allocated memory
 446:Src/usbd_conf.c ****   * @retval None
 447:Src/usbd_conf.c ****   */
 448:Src/usbd_conf.c **** void *USBD_static_malloc(uint32_t size)
 449:Src/usbd_conf.c **** {
 1118              		.loc 1 449 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123              	.LVL97:
 450:Src/usbd_conf.c ****   static uint32_t mem[MAX_STATIC_ALLOC_SIZE];
 451:Src/usbd_conf.c ****   return mem;
 452:Src/usbd_conf.c **** }
 1124              		.loc 1 452 0
 1125 0000 0048     		ldr	r0, .L39
 1126              	.LVL98:
 1127              		@ sp needed
 1128 0002 7047     		bx	lr
 1129              	.L40:
 1130              		.align	2
 1131              	.L39:
 1132 0004 00000000 		.word	mem.8150
 1133              		.cfi_endproc
 1134              	.LFE65:
 1136              		.section	.text.USBD_static_free,"ax",%progbits
 1137              		.align	1
 1138              		.global	USBD_static_free
 1139              		.syntax unified
 1140              		.code	16
 1141              		.thumb_func
 1142              		.fpu softvfp
 1144              	USBD_static_free:
 1145              	.LFB66:
ARM GAS  /tmp/cc7XxYnW.s 			page 28


 453:Src/usbd_conf.c **** 
 454:Src/usbd_conf.c **** /**
 455:Src/usbd_conf.c ****   * @brief  Dummy memory free
 456:Src/usbd_conf.c ****   * @param  *p pointer to allocated  memory address
 457:Src/usbd_conf.c ****   * @retval None
 458:Src/usbd_conf.c ****   */
 459:Src/usbd_conf.c **** void USBD_static_free(void *p)
 460:Src/usbd_conf.c **** {
 1146              		.loc 1 460 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150              		@ link register save eliminated.
 1151              	.LVL99:
 461:Src/usbd_conf.c **** 
 462:Src/usbd_conf.c **** }
 1152              		.loc 1 462 0
 1153              		@ sp needed
 1154 0000 7047     		bx	lr
 1155              		.cfi_endproc
 1156              	.LFE66:
 1158              		.comm	hpcd,544,4
 1159              		.comm	UserTxBuffer,512,4
 1160              		.comm	UserRxBuffer,512,4
 1161              		.section	.bss.mem.8150,"aw",%nobits
 1162              		.align	2
 1165              	mem.8150:
 1166 0000 00000000 		.space	560
 1166      00000000 
 1166      00000000 
 1166      00000000 
 1166      00000000 
 1167              		.text
 1168              	.Letext0:
 1169              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1170              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1171              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1172              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1173              		.file 6 "/usr/include/newlib/sys/lock.h"
 1174              		.file 7 "/usr/include/newlib/sys/_types.h"
 1175              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1176              		.file 9 "/usr/include/newlib/sys/reent.h"
 1177              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1178              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1179              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 1180              		.file 13 "/usr/include/newlib/stdlib.h"
 1181              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1182              		.file 15 "Inc/usbd_desc.h"
 1183              		.file 16 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 1184              		.file 17 "Inc/usbd_cdc_interface.h"
 1185              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1186              		.file 19 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd_ex.h"
 1187              		.file 20 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
 1188              		.file 21 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/cc7XxYnW.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_conf.c
     /tmp/cc7XxYnW.s:16     .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/cc7XxYnW.s:23     .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/cc7XxYnW.s:103    .text.HAL_PCD_MspInit:000000000000005c $d
     /tmp/cc7XxYnW.s:108    .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/cc7XxYnW.s:115    .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/cc7XxYnW.s:135    .text.HAL_PCD_MspDeInit:000000000000000c $d
     /tmp/cc7XxYnW.s:141    .text.HAL_PCD_SetupStageCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:148    .text.HAL_PCD_SetupStageCallback:0000000000000000 HAL_PCD_SetupStageCallback
     /tmp/cc7XxYnW.s:179    .text.HAL_PCD_DataOutStageCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:186    .text.HAL_PCD_DataOutStageCallback:0000000000000000 HAL_PCD_DataOutStageCallback
     /tmp/cc7XxYnW.s:221    .text.HAL_PCD_DataInStageCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:228    .text.HAL_PCD_DataInStageCallback:0000000000000000 HAL_PCD_DataInStageCallback
     /tmp/cc7XxYnW.s:261    .text.HAL_PCD_SOFCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:268    .text.HAL_PCD_SOFCallback:0000000000000000 HAL_PCD_SOFCallback
     /tmp/cc7XxYnW.s:294    .text.HAL_PCD_ResetCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:301    .text.HAL_PCD_ResetCallback:0000000000000000 HAL_PCD_ResetCallback
     /tmp/cc7XxYnW.s:336    .text.HAL_PCD_SuspendCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:343    .text.HAL_PCD_SuspendCallback:0000000000000000 HAL_PCD_SuspendCallback
     /tmp/cc7XxYnW.s:358    .text.HAL_PCD_ResumeCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:365    .text.HAL_PCD_ResumeCallback:0000000000000000 HAL_PCD_ResumeCallback
     /tmp/cc7XxYnW.s:380    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:387    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/cc7XxYnW.s:413    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:420    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/cc7XxYnW.s:446    .text.HAL_PCD_ConnectCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:453    .text.HAL_PCD_ConnectCallback:0000000000000000 HAL_PCD_ConnectCallback
     /tmp/cc7XxYnW.s:479    .text.HAL_PCD_DisconnectCallback:0000000000000000 $t
     /tmp/cc7XxYnW.s:486    .text.HAL_PCD_DisconnectCallback:0000000000000000 HAL_PCD_DisconnectCallback
     /tmp/cc7XxYnW.s:512    .text.USBD_LL_Init:0000000000000000 $t
     /tmp/cc7XxYnW.s:519    .text.USBD_LL_Init:0000000000000000 USBD_LL_Init
     /tmp/cc7XxYnW.s:602    .text.USBD_LL_Init:000000000000006c $d
                            *COM*:0000000000000220 hpcd
     /tmp/cc7XxYnW.s:608    .text.USBD_LL_DeInit:0000000000000000 $t
     /tmp/cc7XxYnW.s:615    .text.USBD_LL_DeInit:0000000000000000 USBD_LL_DeInit
     /tmp/cc7XxYnW.s:642    .text.USBD_LL_Start:0000000000000000 $t
     /tmp/cc7XxYnW.s:649    .text.USBD_LL_Start:0000000000000000 USBD_LL_Start
     /tmp/cc7XxYnW.s:676    .text.USBD_LL_Stop:0000000000000000 $t
     /tmp/cc7XxYnW.s:683    .text.USBD_LL_Stop:0000000000000000 USBD_LL_Stop
     /tmp/cc7XxYnW.s:710    .text.USBD_LL_OpenEP:0000000000000000 $t
     /tmp/cc7XxYnW.s:717    .text.USBD_LL_OpenEP:0000000000000000 USBD_LL_OpenEP
     /tmp/cc7XxYnW.s:749    .text.USBD_LL_CloseEP:0000000000000000 $t
     /tmp/cc7XxYnW.s:756    .text.USBD_LL_CloseEP:0000000000000000 USBD_LL_CloseEP
     /tmp/cc7XxYnW.s:783    .text.USBD_LL_FlushEP:0000000000000000 $t
     /tmp/cc7XxYnW.s:790    .text.USBD_LL_FlushEP:0000000000000000 USBD_LL_FlushEP
     /tmp/cc7XxYnW.s:817    .text.USBD_LL_StallEP:0000000000000000 $t
     /tmp/cc7XxYnW.s:824    .text.USBD_LL_StallEP:0000000000000000 USBD_LL_StallEP
     /tmp/cc7XxYnW.s:851    .text.USBD_LL_ClearStallEP:0000000000000000 $t
     /tmp/cc7XxYnW.s:858    .text.USBD_LL_ClearStallEP:0000000000000000 USBD_LL_ClearStallEP
     /tmp/cc7XxYnW.s:885    .text.USBD_LL_IsStallEP:0000000000000000 $t
     /tmp/cc7XxYnW.s:892    .text.USBD_LL_IsStallEP:0000000000000000 USBD_LL_IsStallEP
     /tmp/cc7XxYnW.s:945    .text.USBD_LL_SetUSBAddress:0000000000000000 $t
     /tmp/cc7XxYnW.s:952    .text.USBD_LL_SetUSBAddress:0000000000000000 USBD_LL_SetUSBAddress
     /tmp/cc7XxYnW.s:979    .text.USBD_LL_Transmit:0000000000000000 $t
     /tmp/cc7XxYnW.s:986    .text.USBD_LL_Transmit:0000000000000000 USBD_LL_Transmit
     /tmp/cc7XxYnW.s:1013   .text.USBD_LL_PrepareReceive:0000000000000000 $t
ARM GAS  /tmp/cc7XxYnW.s 			page 30


     /tmp/cc7XxYnW.s:1020   .text.USBD_LL_PrepareReceive:0000000000000000 USBD_LL_PrepareReceive
     /tmp/cc7XxYnW.s:1047   .text.USBD_LL_GetRxDataSize:0000000000000000 $t
     /tmp/cc7XxYnW.s:1054   .text.USBD_LL_GetRxDataSize:0000000000000000 USBD_LL_GetRxDataSize
     /tmp/cc7XxYnW.s:1080   .text.USBD_LL_Delay:0000000000000000 $t
     /tmp/cc7XxYnW.s:1087   .text.USBD_LL_Delay:0000000000000000 USBD_LL_Delay
     /tmp/cc7XxYnW.s:1109   .text.USBD_static_malloc:0000000000000000 $t
     /tmp/cc7XxYnW.s:1116   .text.USBD_static_malloc:0000000000000000 USBD_static_malloc
     /tmp/cc7XxYnW.s:1132   .text.USBD_static_malloc:0000000000000004 $d
     /tmp/cc7XxYnW.s:1165   .bss.mem.8150:0000000000000000 mem.8150
     /tmp/cc7XxYnW.s:1137   .text.USBD_static_free:0000000000000000 $t
     /tmp/cc7XxYnW.s:1144   .text.USBD_static_free:0000000000000000 USBD_static_free
                            *COM*:0000000000000200 UserTxBuffer
                            *COM*:0000000000000200 UserRxBuffer
     /tmp/cc7XxYnW.s:1162   .bss.mem.8150:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
HAL_PCDEx_PMAConfig
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
